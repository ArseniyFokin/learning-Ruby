Практикум


1) Приложение-повторятель
Реализуйте приложение, которое будет повторять предложения, введённые пользователем. Приложение должно выполнять следующие действия:
1.Сразу после запуска приложение выводит информацию о тех действиях, которые приложение позволяет выполнять, о тех данных, которые ожидаются от пользователя.
2.Перед вводом пользователя обязательно показывать приглашение для ввода данных. Приглашение может быть простым, например > , или более информативным, например введите строку> . Приглашение должно показываться на строке, в которой пользователь должен вводить данные.
3.Считайте строку, которую ввёл пользователь и выведете её на экран с помощью методов puts, print, printf, p
4.Предложите пользователю ещё раз ввести данные.
5.Завершите считывание данных, когда пользователь введёт строку “stop, please”.


2) Простейший калькулятор, умеющий складывать
Реализуйте приложение, которое будет считывать от пользователя вещественные числа и складывать их с предыдущими введёнными числами.
1.Приложение должно показывать справку об использовании, а также приглашение для ввода данных.
2.Когда пользователь ввёл строку, приложение должно считать её, преобразовать к вещественному числу, прибавить к текущей сумме и вывести:
    Значение считанного числа.
    Значение суммы на настоящий момент.
3.Данные действия должны происходить в бесконечном цикле.
4.Бесконечный цикл считывания данных должен закончиться, если
    Пользователь ввёл строку “over”.
    Пользователь завершил поток ввода данных, введя сочетание клавиш Ctrl+D. В этом случае приложение должно завершаться корректно, не должно быть сообщений от интерпретатора Ruby.
5.По окончании работы приложение должно вывести результат сложения чисел.

Ответьте на следующие вопросы:
    Что происходит с потоком ввода, когда пользователь вводит сочетание клавиш Ctrl+D (Ctrl+Z Enter на Windows)?
    Что происходит, если попытаться сложить строку и число?


3) Реализация корректного ввода положительных вещественных чисел
Реализуйте приложение, которое будет контролировать, что пользователь ввёл целое положительное число.
1.Приложение должно показывать справку об использовании, а также приглашение для ввода данных.
2.Приложение должно считывать строку, введённую пользователем, преобразовывать её к целому числу.
    Если пользователь ввёл отрицательное число или 0, то сообщать пользователю об ошибочном вводе.
    Если пользователь ввёл положительное число, то сообщать ему о правильном вводе и выводить введённое число.
    Дополнительно в последнем случае проверять, что введённая строка не содержит других символов кроме введённого числа.
3.Бесконечный цикл заканчивается, если
    Пользователь ввёл число “99.999”.
    Пользователь завершил поток ввода данных, введя сочетание клавиш Ctrl+D (Ctrl+Z Enter на Windows).
4.По окончании работы приложение должно сообщать о количестве успешных и ошибочных вводов данных со стороны пользователя.


4)Считывание русских строк
Реализуйте приложение, которое будет считывать слова, ведённые пользователем и подсчитывать сколько раз пользователь ввёл слово дерево.
Внимание! в исходном коде вашего приложения слово дерево должно быть написано кириллицей.
1.Приложение должно показывать справку об использовании.
2.Приложение должно показывать приглашение для ввода данных.
3.Приложение должно считать строку, введённую пользователем, удалять лишние символы.
    Если пользователь ввёл слово дерево, то увеличить значение счётчика и переход к пункту №2.
    Если пользователь ввёл слово конец или завершил поток ввода введя сочетание клавиш Ctrl+D (Ctrl+Z Enter на Windows)
    Если пользователь ввёл любое другое слово, то переход к пункту №2.
4.Приложение должно показать подсчитанное количество введённого слова дерево.


5)Решение задачи №3 из пункта 1.2 задачника
Реализуйте задачу №3 из пункта 1.2 задачника. При этом выполните следующие условия:
1.Приложение должно выводить справку об использовании и использовать приглашения для ввода данных.
2.Приложение должно проверять корректность ввода данных. В случае если данные не верны, то приложение должно сообщать об этом пользователю и просить его повторить ввод.
3.Результат работы приложения должен быть представлен в доступной для обычного человека форме.
Задача:
    Вводятся длины трёх сторон треугольника. 
    Определить, можноли разместить этот треугольник в круге радиуса r.
